// ------------------------------------------------------------------------
// ========================================================================
// THIS CODE AND INFORMATION ARE GENERATED BY AUTOMATIC CODE GENERATOR
// ========================================================================
// Template:   ViewModel.tt
using System;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.Windows.Input;
using WPAppStudio;
using WPAppStudio.Controls;
using WPAppStudio.Entities;
using WPAppStudio.Entities.Base;
using WPAppStudio.Localization;
using WPAppStudio.Repositories;
using WPAppStudio.Services;
using WPAppStudio.Services.Interfaces;
using WPAppStudio.Shared;
using WPAppStudio.ViewModel.Base;
using WPAppStudio.ViewModel.Interfaces;

namespace WPAppStudio.ViewModel
{
    /// <summary>
    /// Implementation of Rooms_List ViewModel.
    /// </summary>
    [System.Runtime.CompilerServices.CompilerGenerated]
    [System.CodeDom.Compiler.GeneratedCode("Radarc", "4.0")]
    public partial class Rooms_ListViewModel : BindableBase, IRooms_ListViewModel
    {       

		private readonly IDialogService _dialogService;
		private readonly INavigationService _navigationService;
		private readonly ILockScreenService _lockScreenService;
		private readonly IPeopleCollection _peopleCollection;
		private readonly IRoomsRepoCollection _roomsRepoCollection;
		
        /// <summary>
        /// Initializes a new instance of the <see cref="Rooms_ListViewModel" /> class.
        /// </summary>
        /// <param name="dialogService">The Dialog Service.</param>
        /// <param name="navigationService">The Navigation Service.</param>
        /// <param name="lockScreenService">The Lock Screen Service.</param>
        /// <param name="peopleCollection">The People Collection.</param>
        /// <param name="roomsRepoCollection">The Rooms Repo Collection.</param>
        public Rooms_ListViewModel(IDialogService dialogService, INavigationService navigationService, ILockScreenService lockScreenService, IPeopleCollection peopleCollection, IRoomsRepoCollection roomsRepoCollection)
        {
			_dialogService = dialogService;
			_navigationService = navigationService;
			_lockScreenService = lockScreenService;
			_peopleCollection = peopleCollection;
			_roomsRepoCollection = roomsRepoCollection;
        }
		

		private ObservableCollection<RoomsRepoCollectionSchema> _rooms_ListListControlCollection;

        /// <summary>
        /// Rooms_ListListControlCollection property.
        /// </summary>		
        public ObservableCollection<RoomsRepoCollectionSchema> Rooms_ListListControlCollection
        {
            get
            {
                if(_rooms_ListListControlCollection == null)
					RefreshRooms_ListListControlCollectionDelegate();
				return _rooms_ListListControlCollection;     
            }
            set
            {
                SetProperty(ref _rooms_ListListControlCollection, value);
            }
        }

		private RoomsRepoCollectionSchema _selectedRooms_ListListControlCollection;

        /// <summary>
        /// SelectedRooms_ListListControlCollection property.
        /// </summary>		
        public RoomsRepoCollectionSchema SelectedRooms_ListListControlCollection
        {
            get
            {
				return _selectedRooms_ListListControlCollection;
            }
            set
            {
                _selectedRooms_ListListControlCollection = value;
                if (value != null)
                    _navigationService.NavigateTo<IRooms_DetailViewModel>(_selectedRooms_ListListControlCollection);
            }
        }

		private ObservableCollection<PeopleCollectionSchema> _people_ListListControlCollection;

        /// <summary>
        /// People_ListListControlCollection property.
        /// </summary>		
        public ObservableCollection<PeopleCollectionSchema> People_ListListControlCollection
        {
            get
            {
                if(_people_ListListControlCollection == null)
					_people_ListListControlCollection = _peopleCollection.GetData();
				return _people_ListListControlCollection;     
            }
            set
            {
                SetProperty(ref _people_ListListControlCollection, value);
            }
        }

		private PeopleCollectionSchema _selectedPeople_ListListControlCollection;

        /// <summary>
        /// SelectedPeople_ListListControlCollection property.
        /// </summary>		
        public PeopleCollectionSchema SelectedPeople_ListListControlCollection
        {
            get
            {
				return _selectedPeople_ListListControlCollection;
            }
            set
            {
                _selectedPeople_ListListControlCollection = value;
                if (value != null)
                    _navigationService.NavigateTo<IPeople_DetailViewModel>(_selectedPeople_ListListControlCollection);
            }
        }

		private MenuItemData _selectedSettingsMenuControl;

        /// <summary>
        /// SelectedSettingsMenuControl property.
        /// </summary>		
        public MenuItemData SelectedSettingsMenuControl
        {
            get
            {
				return _selectedSettingsMenuControl;
            }
            set
            {
                _selectedSettingsMenuControl = value;
                if (value != null)
                    _navigationService.NavigateTo(value);
            }
        }

        /// <summary>
        /// Delegate method for the RefreshRooms_ListListControlCollection command.
        /// </summary>
        public async void RefreshRooms_ListListControlCollectionDelegate(int pageNumber= 1) 
        {
			try
			{
				LoadingRooms_ListListControlCollection = true;
				Rooms_ListListControlCollection = await _roomsRepoCollection.GetData();
			}
            catch (Exception ex)
            {
				Rooms_ListListControlCollection = null;
		
                Debug.WriteLine(ex.ToString());
                _dialogService.Show(AppResources.DynamicDataError + Environment.NewLine + AppResources.TryAgain);
            }
            finally
            {
				LoadingRooms_ListListControlCollection = false;
			}
        }
		
		
        private bool _loadingRooms_ListListControlCollection;
		
        public bool LoadingRooms_ListListControlCollection
        {
            get { return _loadingRooms_ListListControlCollection; }
            set { SetProperty(ref _loadingRooms_ListListControlCollection, value); }
        }

        private ICommand _refreshRooms_ListListControlCollection;

        /// <summary>
        /// Gets the RefreshRooms_ListListControlCollection command.
        /// </summary>
        public ICommand RefreshRooms_ListListControlCollection
        {
            get { return _refreshRooms_ListListControlCollection = _refreshRooms_ListListControlCollection ?? new DelegateCommand<int>(RefreshRooms_ListListControlCollectionDelegate); }
        }

        /// <summary>
        /// Delegate method for the SetLockScreenCommand command.
        /// </summary>
        public  void SetLockScreenCommandDelegate() 
        {
	
				_lockScreenService.SetLockScreen("DoWapp-Splashscreen-WXGA-black.png");
        }
		

        private ICommand _setLockScreenCommand;

        /// <summary>
        /// Gets the SetLockScreenCommand command.
        /// </summary>
        public ICommand SetLockScreenCommand
        {
            get { return _setLockScreenCommand = _setLockScreenCommand ?? new DelegateCommand(SetLockScreenCommandDelegate); }
        }
    }
}
