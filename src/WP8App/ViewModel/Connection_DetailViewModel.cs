// ------------------------------------------------------------------------
// ========================================================================
// THIS CODE AND INFORMATION ARE GENERATED BY AUTOMATIC CODE GENERATOR
// ========================================================================
// Template:   ViewModel.tt
using System;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.Windows.Input;
using WPAppStudio;
using WPAppStudio.Controls;
using WPAppStudio.Entities;
using WPAppStudio.Entities.Base;
using WPAppStudio.Localization;
using WPAppStudio.Repositories;
using WPAppStudio.Services;
using WPAppStudio.Services.Interfaces;
using WPAppStudio.Shared;
using WPAppStudio.ViewModel.Base;
using WPAppStudio.ViewModel.Interfaces;

namespace WPAppStudio.ViewModel
{
    /// <summary>
    /// Implementation of Connection_Detail ViewModel.
    /// </summary>
    [System.Runtime.CompilerServices.CompilerGenerated]
    [System.CodeDom.Compiler.GeneratedCode("Radarc", "4.0")]
    public partial class Connection_DetailViewModel : BindableBase, IConnection_DetailViewModel, INavigable
    {       

		private readonly IDialogService _dialogService;
		private readonly INavigationService _navigationService;
		private readonly ISpeechService _speechService;
		private readonly IShareService _shareService;
		private readonly ILiveTileService _liveTileService;
		
        /// <summary>
        /// Initializes a new instance of the <see cref="Connection_DetailViewModel" /> class.
        /// </summary>
        /// <param name="dialogService">The Dialog Service.</param>
        /// <param name="navigationService">The Navigation Service.</param>
        /// <param name="speechService">The Speech Service.</param>
        /// <param name="shareService">The Share Service.</param>
        /// <param name="liveTileService">The Live Tile Service.</param>
        public Connection_DetailViewModel(IDialogService dialogService, INavigationService navigationService, ISpeechService speechService, IShareService shareService, ILiveTileService liveTileService)
        {
			_dialogService = dialogService;
			_navigationService = navigationService;
			_speechService = speechService;
			_shareService = shareService;
			_liveTileService = liveTileService;
        }
		

		private ConnectionCollectionSchema _currentConnectionCollectionSchema;

        /// <summary>
        /// CurrentConnectionCollectionSchema property.
        /// </summary>		
        public ConnectionCollectionSchema CurrentConnectionCollectionSchema
        {
            get
            {
				return _currentConnectionCollectionSchema;
            }
            set
            {
                SetProperty(ref _currentConnectionCollectionSchema, value);
            }
        }

        /// <summary>
        /// Delegate method for the TextToSpeechConnection_DetailStaticControlCommand command.
        /// </summary>
        public  void TextToSpeechConnection_DetailStaticControlCommandDelegate() 
        {
	
				_speechService.TextToSpeech(CurrentConnectionCollectionSchema.Subtitle + " " + CurrentConnectionCollectionSchema.Description);
        }
		

        private ICommand _textToSpeechConnection_DetailStaticControlCommand;

        /// <summary>
        /// Gets the TextToSpeechConnection_DetailStaticControlCommand command.
        /// </summary>
        public ICommand TextToSpeechConnection_DetailStaticControlCommand
        {
            get { return _textToSpeechConnection_DetailStaticControlCommand = _textToSpeechConnection_DetailStaticControlCommand ?? new DelegateCommand(TextToSpeechConnection_DetailStaticControlCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the ShareConnection_DetailStaticControlCommand command.
        /// </summary>
        public  void ShareConnection_DetailStaticControlCommandDelegate() 
        {
	
				_shareService.Share(CurrentConnectionCollectionSchema.Subtitle, CurrentConnectionCollectionSchema.Description);
        }
		

        private ICommand _shareConnection_DetailStaticControlCommand;

        /// <summary>
        /// Gets the ShareConnection_DetailStaticControlCommand command.
        /// </summary>
        public ICommand ShareConnection_DetailStaticControlCommand
        {
            get { return _shareConnection_DetailStaticControlCommand = _shareConnection_DetailStaticControlCommand ?? new DelegateCommand(ShareConnection_DetailStaticControlCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the PinToStartConnection_DetailStaticControlCommand command.
        /// </summary>
        public  void PinToStartConnection_DetailStaticControlCommandDelegate() 
        {
	
				_liveTileService.PinToStart(typeof(IConnection_DetailViewModel), CreateTileInfoConnection_DetailStaticControl());
        }
		

        private ICommand _pinToStartConnection_DetailStaticControlCommand;

        /// <summary>
        /// Gets the PinToStartConnection_DetailStaticControlCommand command.
        /// </summary>
        public ICommand PinToStartConnection_DetailStaticControlCommand
        {
            get { return _pinToStartConnection_DetailStaticControlCommand = _pinToStartConnection_DetailStaticControlCommand ?? new DelegateCommand(PinToStartConnection_DetailStaticControlCommandDelegate); }
        }
		public object NavigationContext
        {
            set
            {              
                if (!(value is ConnectionCollectionSchema)) { return; }
                
                CurrentConnectionCollectionSchema = value as ConnectionCollectionSchema;
            }
        }
        /// <summary>
        /// Initializes a <see cref="TileInfo" /> object for the Connection_DetailStaticControl control.
        /// </summary>
		/// <returns>A <see cref="TileInfo" /> object.</returns>
        public TileInfo CreateTileInfoConnection_DetailStaticControl()
        {
            var tileInfo = new TileInfo
            {
                CurrentId = CurrentConnectionCollectionSchema.Id.ToString(),
                Title = CurrentConnectionCollectionSchema.Subtitle,
                BackTitle = CurrentConnectionCollectionSchema.Subtitle,
                BackContent = CurrentConnectionCollectionSchema.Description,
                Count = 0,
                BackgroundImagePath = CurrentConnectionCollectionSchema.Image,
                BackBackgroundImagePath = CurrentConnectionCollectionSchema.Image,
                LogoPath = "Logo-64afe68b-41c7-4545-a549-8de070ba8299.png"
            };
            return tileInfo;
        }
    }
}
